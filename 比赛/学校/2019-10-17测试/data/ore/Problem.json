{"Title":"矿物运输","Description":"<p>在莫个不知名的行星上蕴含着大量冰晶矿，Jim和他的好兄弟Swan自然不能放过这个赚钱的好机会。Jim在整个星球上开掘树型矿洞，每个矿坑之间都有矿道相连。Jim和Swan在每个矿坑开采了大量的矿石，现在他们面临一个新的问题，怎么把所有的矿石运出去。</p>\n\n<p>已知，矿坑与矿坑之间形成了有向的树形结构，即除0号矿坑以外每个矿坑都有与其相连的父亲矿坑。Jim总共开采了n个矿坑并将其从0到n-1编号 ，每个矿坑都存有val[i] 个单位的矿石。Jim和Swan每次操作都可以从某个矿坑移动至少1个单位的矿石到其父亲矿坑。Jim和Swan决定比试一下，由Jim开始轮流操作,最后不能操作的人输。Jim偷偷的找到了你，他想知道在两人都采取最优策略的情况下是否Jim能够赢得这场比试。</p>\n\n<p>数据范围：</p>\n\n<p>对于 25%的数据 保证 n&lt;=10<br />\n对于 50%的数据 保证 n&lt;=1000<br />\n存在 10%的数据 每个矿坑只有一个子矿坑<br />\n存在 10%的数据 除0号矿坑外，每个矿坑都与0号矿坑相连。<br />\n对于 100%的数据 保证 &Sigma;n&lt;=200000</p>","InputDescription":"多组数据\n第一行为数据组数 T <=30\n第二行一个整数n，表示矿坑数目 n<=2e5\n接下来一行为n-1个整数fa[1]..fa[n-1]，分别描述了除根节点外每个点的父亲。方便起见，保证0<=fa[i]<i。 \n接下来一行为n个非负整数val[0]..val[n-1]，分别描述了每个矿坑初始的矿石数。0<=val[i]<1e9。","OutputDescription":"对于每组数据，输出一行，若Jim必胜则输出\"win\"，否则输出\"lose\"（不含引号）。","InputSample":"1\n6\n0 0 2 2 4 \n1 4 0 1 1 2","OutputSample":"win","TimeLimit":1500,"MemoryLimit":134217728,"BasePoint":80,"StandardProgramLanguage":12,"SpecialProgramLanguage":0}