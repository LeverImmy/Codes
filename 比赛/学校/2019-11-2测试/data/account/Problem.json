{"Title":"算账","Description":"<p>诺德镇有很多宝物，比如夹克老爷的宝算盘就可以通过运行一段C++程序来帮助算账</p>\n\n<p>有一天夹克老爷的账房跟师爷说想要把自家长工的工资表排一下序，因此师爷迅速提起毛笔写了以下算法。</p>\n\n<pre>\n<code class=\"language-cpp\">#include &lt;algorithm&gt;\nint randint(int L,int R) {\n\tstatic long long X=1;\n\tconst long long A=__A__,B=__B__;\n\tX=(X*X+A*X+B)%99824353LL;\n\treturn X%(R-L+1)+L;\n}\nvoid Qsort(int A[],int L,int R) {\n\tif(L&gt;=R)return ;\n\tint l=L;\n\tint r=R;\n\tint index=randint(L,R);\n\tint key=A[index];\n\tstd::swap(A[l],A[index]);\n\twhile(l&lt;r) {\n\t\twhile(l&lt;r&amp;&amp;A[r]&gt;=key)--r;A[l]=A[r];\n\t\twhile(l&lt;r&amp;&amp;A[l]&lt;=key)++l;A[r]=A[l];\n\t}A[l]=key;\n\tQsort(A,L,l-1);\n\tQsort(A,l+1,R);\n} </code></pre>\n\n<p>最终调用的时候会按照以下方法调用</p>\n\n<pre>\n<code class=\"language-cpp\">Qsort(A_list,1,N);</code></pre>\n\n<p>这里A_list数组代表长工的工资单，它是一个下标从1开始，在N处结束，长度为N的一个1~N的排列。</p>\n\n<p>师爷很快且正确地完成了这项工作，于是迅速把这份代码交给了账房，并声称这份代码比南越的采风官跑的都快。然而经验丰富的账房先生却一眼发现了问题，即对于特定的A_List输入，Qsort函数的递归深度会变得非常之高。但是账房先生一时语塞，竟然把刚刚想出来的特定A_List输入忘记了！</p>\n\n<p>现在，请聪明的你请帮助账房先生说出他刚刚忘记的特定A_List，使得Qsort函数的递归深度达到最大值。账房先生比较喜欢看大布告，所以当有多个符合要求的A_List时，输出其中字典序最大的。</p>","InputDescription":"一行一共三个整数 N,__A__,__B__\nN表示A_List长度，__A__,__B__的意义与randint中的响应变量意义相同。\n其中1<=N<=100,000，0<=__A__,__B__<99824353","OutputDescription":"输出一行N个整数，第i个数描述了所求A_List中原下表为i的位置对应的数。","InputSample":"3 1 2","OutputSample":"3 1 2","TimeLimit":1000,"MemoryLimit":134217728,"BasePoint":80,"StandardProgramLanguage":11,"SpecialProgramLanguage":0}